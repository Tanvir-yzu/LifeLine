# Generated by Django 5.2.5 on 2025-08-23 14:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('address', models.TextField(blank=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('weight', models.FloatField(blank=True, help_text='Weight in kg', null=True)),
                ('last_donation_date', models.DateField(blank=True, null=True)),
                ('medical_conditions', models.TextField(blank=True, help_text='Any medical conditions or medications')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_donor', models.BooleanField(default=True, help_text='Can donate blood')),
                ('is_recipient', models.BooleanField(default=True, help_text='Can receive blood')),
                ('is_available_for_donation', models.BooleanField(default=True)),
                ('email_verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email_verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BloodRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=200)),
                ('blood_group_needed', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('units_needed', models.PositiveIntegerField(default=1, help_text='Number of blood units needed')),
                ('hospital_name', models.CharField(max_length=200)),
                ('hospital_address', models.TextField()),
                ('urgency', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('needed_by_date', models.DateTimeField()),
                ('description', models.TextField(help_text='Additional details about the request')),
                ('contact_phone', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('FULFILLED', 'Fulfilled'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='ACTIVE', max_length=10)),
                ('is_public', models.BooleanField(default=True, help_text='Make this request visible to all users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_requests', to='users.user')),
            ],
            options={
                'verbose_name': 'Blood Request',
                'verbose_name_plural': 'Blood Requests',
                'db_table': 'users_blood_request',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100)),
                ('total_donations', models.PositiveIntegerField(default=0)),
                ('total_requests_fulfilled', models.PositiveIntegerField(default=0)),
                ('receive_email_notifications', models.BooleanField(default=True)),
                ('receive_sms_notifications', models.BooleanField(default=False)),
                ('privacy_level', models.CharField(choices=[('PUBLIC', 'Public'), ('DONORS_ONLY', 'Donors Only'), ('PRIVATE', 'Private')], default='PUBLIC', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='users.user')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'users_user_profile',
            },
        ),
        migrations.CreateModel(
            name='BloodRequestResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('ACCEPTED', 'Accepted'), ('DECLINED', 'Declined'), ('COMPLETED', 'Completed')], max_length=10)),
                ('message', models.TextField(blank=True, help_text='Optional message from donor')),
                ('donor_phone', models.CharField(blank=True, max_length=15)),
                ('preferred_contact_time', models.CharField(blank=True, max_length=100)),
                ('responded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blood_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='users.bloodrequest')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_responses', to='users.user')),
            ],
            options={
                'verbose_name': 'Blood Request Response',
                'verbose_name_plural': 'Blood Request Responses',
                'db_table': 'users_blood_request_response',
                'ordering': ['-responded_at'],
                'unique_together': {('blood_request', 'donor')},
            },
        ),
    ]
